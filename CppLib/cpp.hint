// ヒント ファイルは、Visual Studio IDE が Visual C++ 識別子を解釈するのに役立ちます
// 関数およびマクロの名前などです。
// 詳細については次を参照してください https://go.microsoft.com/fwlink/?linkid=865984
#define forange(COUNTER, END) forstep_type(decltype(END), COUNTER, 0, END)
// ヒント ファイルは、Visual Studio IDE が Visual C++ 識別子を解釈するのに役立ちます
// 関数およびマクロの名前などです。
// 詳細については次を参照してください https://go.microsoft.com/fwlink/?linkid=865984
#define forange(COUNTER, END) forstep_type(std::decay_t<decltype(END)>, COUNTER, std::decay_t<decltype(END)>(), END)
#define NODISCARD [[nodiscard]]
#define assert(expression) ((void)0)
#define assert(expression) (void)( (!!(expression)) || (_wassert(_CRT_WIDE(#expression), _CRT_WIDE(__FILE__), (unsigned)(__LINE__)), 0) )
#define forstep(COUNTER, BEGIN, END) forstep_type(std::decay_t<decltype(BEGIN)>, COUNTER, BEGIN, END)
#define WARN_POP() __pragma(warning(pop))
#define WARN_POP()
#define WARN_PUSH(x)
#define WARN_PUSH(x) __pragma(warning(push))__pragma(warning(x))
#define WARN_PUSH_DISABLE(x)
#define WARN_PUSH_DISABLE(x) __pragma(warning(push))__pragma(warning(disable:x))
#define not
#define narrow_cast
